name: ReleaseCI
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - run: sleep 5 # there's still a race condition for now

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.0'

      - name: Install dependencies and mod
        run: |
          go version  
          cd lambda
          go mod init aws-lambda-go
          go mod tidy
          go list

      - name: Run build
        run: |
          sleep 5
          cd lambda
          GO111MODULE=on GOARCH=amd64 GOOS=linux go build main.go
          pwd
          ls -l

      - name: ZIP file 
        shell: bash
        run: |
           cd /home/runner/work/peptalk/peptalk/lambda
           zip main.zip main

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }} 
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS
        run: |
          export AWS_ROLE_ARN=arn:aws:iam::723098390750:role/GitHubActions
          export AWS_WEB_IDENTITY_TOKEN_FILE=/tmp/awscreds
          export AWS_DEFAULT_REGION=us-west-2

          echo AWS_WEB_IDENTITY_TOKEN_FILE=$AWS_WEB_IDENTITY_TOKEN_FILE >> $GITHUB_ENV
          echo AWS_ROLE_ARN=$AWS_ROLE_ARN >> $GITHUB_ENV
          echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION >> $GITHUB_ENV

          curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value' > $AWS_WEB_IDENTITY_TOKEN_FILE
      
      - name: Copy to S3
        run: |
           cd /home/runner/work/peptalk/peptalk/lambda
           aws s3 cp main.zip s3://beckitrue-lambdas/peptalk/main.zip
